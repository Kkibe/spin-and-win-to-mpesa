<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link rel="shortcut icon" href="login.jpg" type="image/png">
  <link rel="apple-touch-icon" href="login.jpg">
  <title>Dashboard | Spin & Earn To Mpesa</title>
  <link rel="stylesheet" href="/css/index.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #6366f1;
      --primary-dark: #4f46e5;
      --secondary: #f59e0b;
      --secondary-dark: #d97706;
      --dark: #1f2937;
      --light: #f8fafc;
      --gray: #6b7280;
      --success: #10b981;
      --error: #ef4444;
      --white: #ffffff;
      --card-bg: rgba(255, 255, 255, 0.95);
      --shadow: 0 8px 20px -5px rgba(0, 0, 0, 0.1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 12px 20px;
    }

    .dashboard-container {
      width: 100%;
      max-width: 420px;
      background: var(--card-bg);
      backdrop-filter: blur(20px);
      border-radius: 24px;
      padding: 1.5rem;
      box-shadow: var(--shadow);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    /* Header */
    .header {
      text-align: center;
      margin-bottom: 1.5rem;
    }

    .welcome {
      font-size: 1.1rem;
      color: var(--dark);
      margin-bottom: 0.25rem;
    }

    .user-name {
      color: var(--primary);
      font-weight: 600;
    }

    .subtitle {
      color: var(--gray);
      font-size: 0.85rem;
    }

    /* Alert */
    .alert {
      padding: 0.75rem 1rem;
      border-radius: 12px;
      margin-bottom: 1rem;
      font-weight: 500;
      font-size: 0.85rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      animation: slideIn 0.3s ease;
    }

    .alert-success {
      background: #d1fae5;
      color: #065f46;
      border: 1px solid #a7f3d0;
    }

    .alert-close {
      background: none;
      border: none;
      font-size: 1.1rem;
      cursor: pointer;
      color: inherit;
      opacity: 0.7;
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(-5px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Balance Card */
    .balance-card {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      border-radius: 16px;
      padding: 1.5rem;
      color: var(--white);
      margin-bottom: 1.5rem;
      box-shadow: var(--shadow);
    }

    .balance-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
    }

    .balance-title {
      font-size: 0.9rem;
      opacity: 0.9;
    }

    .balance-amount {
      font-size: 2rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 0.5rem;
    }

    .stats-row {
      display: flex;
      justify-content: space-around;
      gap: 1rem;
    }

    .stat-item {
      text-align: center;
      flex: 1;
    }

    .stat-value {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .stat-label {
      font-size: 0.75rem;
      opacity: 0.8;
    }

    /* Quick Actions */
    .quick-actions {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .action-btn {
      background: var(--light);
      border: 1px solid rgba(0, 0, 0, 0.05);
      border-radius: 14px;
      padding: 1rem;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      color: inherit;
    }

    .action-btn:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow);
    }

    .action-icon {
      width: 48px;
      height: 48px;
      background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 0.75rem;
      font-size: 1.25rem;
      color: var(--white);
    }

    .action-text {
      font-size: 0.9rem;
      font-weight: 600;
      color: var(--dark);
    }

    /* User Info */
    .user-info {
      background: var(--light);
      border-radius: 16px;
      padding: 1.25rem;
      margin-bottom: 1.5rem;
    }

    .info-title {
      font-size: 0.9rem;
      font-weight: 600;
      color: var(--dark);
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .info-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 0.75rem;
    }

    .info-item {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .info-label {
      font-size: 0.75rem;
      color: var(--gray);
      font-weight: 500;
    }

    .info-value {
      font-size: 0.85rem;
      color: var(--dark);
      font-weight: 500;
      padding: 0.5rem;
      background: var(--white);
      border-radius: 8px;
      border: 1px solid rgba(0, 0, 0, 0.05);
    }

    /* Footer */
    .footer {
      display: flex;
      justify-content: center;
      gap: 1rem;
    }

    .footer-btn {
      flex: 1;
      padding: 0.75rem 1rem;
      border: none;
      border-radius: 12px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      font-size: 0.85rem;
    }

    .spin-btn {
      background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
      color: var(--white);
    }

    .spin-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(245, 158, 11, 0.3);
    }

    .logout-btn {
      background: transparent;
      color: var(--error);
      border: 1.5px solid var(--error);
    }

    .logout-btn:hover {
      background: var(--error);
      color: var(--white);
    }
  </style>
</head>

<body>
  <div class="dashboard-container">
    <!-- Header -->
    <div class="header">
      <div class="welcome">Welcome, <span class="user-name"><%= user.firstName %></span>! 👋</div>
      <div class="subtitle">Spin & Win Dashboard</div>
    </div>

    <!-- Alert Message -->
    <% if (message) { %>
      <div class="alert alert-success">
        <span><%= message.message %></span>
        <button class="alert-close" onclick="this.parentElement.style.display='none'">×</button>
      </div>
    <% } %>

    <!-- Balance Card -->
    <div class="balance-card">
      <div class="balance-header">
        <div class="balance-title">Available Balance</div>
      </div>
      <div class="balance-amount" id="balance">KSH <%= user.balance %></div>
      <div class="stats-row">
        <div class="stat-item">
          <div class="stat-value" id="gems"><%= user.gems || 0 %></div>
          <div class="stat-label">Gems</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="spins"><%= user.spins || 10 %></div>
          <div class="stat-label">Spins</div>
        </div>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="quick-actions">
      <a href="/" class="action-btn">
        <div class="action-icon">🎮</div>
        <div class="action-text">Spin Now</div>
      </a>
      <a href="/deposit" class="action-btn">
        <div class="action-icon">💳</div>
        <div class="action-text">Activate</div>
      </a>
    </div>

    <!-- User Information -->
    <div class="user-info">
      <div class="info-title">
        <span>👤</span>
        Profile Info
      </div>
      <div class="info-grid">
        <div class="info-item">
          <div class="info-label">Phone</div>
          <div class="info-value"><%= user.phone %></div>
        </div>
        <div class="info-item">
          <div class="info-label">Email</div>
          <div class="info-value"><%= user.email || 'N/A' %></div>
        </div>
        <div class="info-item">
          <div class="info-label">First Name</div>
          <div class="info-value"><%= user.firstName %></div>
        </div>
        <div class="info-item">
          <div class="info-label">Last Name</div>
          <div class="info-value"><%= user.lastName %></div>
        </div>
        <div class="info-item">
          <div class="info-label">Account Status</div>
          <div class="info-value" style="color: <%= user.isActivated ? 'var(--success)' : 'var(--error)' %>; font-weight: 600;">
            <%= user.isActivated ? 'ACTIVATED ✅' : 'INACTIVE ❌' %>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer Actions -->
    <div class="footer">
      <button class="footer-btn spin-btn" onclick="handleNavigate('/')">
        <span>🎯</span>
        Quick Spin
      </button>
      <button class="footer-btn logout-btn" onclick="handleNavigate('/logout')">
        <span>🚪</span>
        Sign Out
      </button>
    </div>
  </div>

  <script>
    // Initialize dashboard data with server values
    let balance = <%= user.balance %>;
    let gems = <%= user.gems || 0 %>;
    let spins = <%= user.spins || 10 %>;

    const balanceDiv = document.querySelector('#balance');
    const gemsDiv = document.querySelector('#gems');
    const spinsDiv = document.querySelector('#spins');

    // Update display
    balanceDiv.textContent = `KSH ${balance}`;
    gemsDiv.textContent = gems;
    spinsDiv.textContent = spins;

    // Handle navigation
    function handleNavigate(url) {
      window.location.pathname = url;
    }

    // Auto-hide alert after 4 seconds
    const alert = document.querySelector('.alert');
    if (alert) {
      setTimeout(() => {
        alert.style.display = 'none';
      }, 4000);
    }

    // Update stats from server data
    function updateStats() {
      // Real-time updates can be implemented here if needed
      // For now, we're using the server-rendered values
    }

    // Check for updates every 5 seconds
    setInterval(updateStats, 5000);

    // Add click effects
    document.addEventListener('DOMContentLoaded', function() {
      const buttons = document.querySelectorAll('.action-btn, .footer-btn');
      buttons.forEach(button => {
        button.addEventListener('click', function(e) {
          // Add ripple effect
          const ripple = document.createElement('span');
          const rect = this.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height);
          const x = e.clientX - rect.left - size / 2;
          const y = e.clientY - rect.top - size / 2;

          ripple.style.cssText = `
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.5);
            transform: scale(0);
            animation: ripple 0.6s linear;
            width: ${size}px;
            height: ${size}px;
            left: ${x}px;
            top: ${y}px;
          `;

          this.style.position = 'relative';
          this.style.overflow = 'hidden';
          this.appendChild(ripple);

          setTimeout(() => ripple.remove(), 600);
        });
      });
    });

    // Add ripple animation
    const style = document.createElement('style');
    style.textContent = `
      @keyframes ripple {
        to {
          transform: scale(4);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
  </script>
</body>
</html>
